<UserControl x:Class="PowerMill_Helper.Tool.CheckTP"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PowerMill_Helper.Tool"
             mc:Ignorable="d" Canvas.Left="300" Canvas.Top="200"
             Width="330" Height="600" >
    <UserControl.Resources>
        <LinearGradientBrush x:Key="RainbowBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="Red" Offset="0.0"/>
            <GradientStop Color="Orange" Offset="0.17"/>
            <GradientStop Color="Yellow" Offset="0.33"/>
            <GradientStop Color="Green" Offset="0.5"/>
            <GradientStop Color="Blue" Offset="0.67"/>
            <GradientStop Color="Indigo" Offset="0.83"/>
            <GradientStop Color="Violet" Offset="1.0"/>
        </LinearGradientBrush>
        <Style x:Key="SegmentedLeftRadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5,0,0,5" >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF96DC93"/>
                                <Setter TargetName="border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#FF96DC93" BlurRadius="10" ShadowDepth="0"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter  Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SegmentedRadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF96DC93"/>
                                <Setter TargetName="border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#FF96DC93" BlurRadius="3" ShadowDepth="0"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter  Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SegmentedRightRadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Width" Value="40" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="0,5,5,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#FF96DC93"/>
                                <Setter TargetName="border" Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect Color="#FF96DC93" BlurRadius="5" ShadowDepth="0"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter  Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  x:Key="AppRes" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Width" Value="24"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FFFFFA8F"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                        <Border  CornerRadius="12"  Background="{TemplateBinding Background}" Cursor="Hand" >
                            <TextBlock Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Uid}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AppTitle" TargetType="{x:Type Label}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Margin" Value="0,5,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label">
                        <Border Background="#FFAEC4C5" CornerRadius="12">
                            <Grid>
                               
                                <TextBlock Text="{TemplateBinding Name}"  HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <Button  Width="20" Height="20" HorizontalAlignment="Right" Margin="0,0,2,0" Click="BorderCloserButton">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Foreground" Value="Black"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="Red"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>

                                    </Button.Style>
                                    <Button.Template>
                                        <ControlTemplate TargetType="Button">
                                            <Border  CornerRadius="10"  Background="{TemplateBinding Background}" Cursor="Hand" >
                                                <Grid>
                                                    <Line X1="5" X2="15" Y1="5" Y2="15" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" />
                                                    <Line X1="15" X2="5" Y1="5" Y2="15" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" />
                                                </Grid>
                                            </Border>
                                        </ControlTemplate>

                                    </Button.Template>
                                </Button>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <EventSetter Event="MouseLeftButtonDown" Handler="Move_Border_MouseDown"/>
            <EventSetter Event="MouseMove" Handler="Move_Border_Mousemove"/>
            <EventSetter Event="MouseLeftButtonUp" Handler="Move_Border_MoseUp"/>


        </Style>
        <Style x:Key="EntitySelect" TargetType="{x:Type Button}">
     
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                      
                        <Grid>
                            <Border x:Name="RainbowShadow"  CornerRadius="5" Opacity="0"  Background="{StaticResource RainbowBrush}" Cursor="Hand">
                                <Border.Effect>
                                    <BlurEffect Radius="20"/>
                                </Border.Effect>
                            </Border>
                            <Border  CornerRadius="5"  Background="{TemplateBinding Background}" Cursor="Hand">
                                <TextBlock Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- 鼠标进入时开始动画 -->
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RainbowShadow"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1"
                                                 Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- 鼠标离开时反向动画 -->
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RainbowShadow"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="0"
                                                 Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="lightbutton" TargetType="{x:Type Button}">

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">

                        <Grid>
                            <Border x:Name="RainbowShadow"  CornerRadius="5" Opacity="0"  Background="#FF96DC93" Cursor="Hand">
                                <Border.Effect>
                                    <BlurEffect Radius="20"/>
                                </Border.Effect>
                            </Border>
                            <Border  CornerRadius="5"  Background="{TemplateBinding Background}" Cursor="Hand">
                                <TextBlock Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- 鼠标进入时开始动画 -->
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RainbowShadow"
                                          Storyboard.TargetProperty="Opacity"
                                          To="1"
                                          Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                            <!-- 鼠标离开时反向动画 -->
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="RainbowShadow"
                                          Storyboard.TargetProperty="Opacity"
                                          To="0"
                                          Duration="0:0:0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Border UseLayoutRounding="True"  Background="WhiteSmoke" 
          Margin="0" Opacity="1" CornerRadius="14"  >
        <Border.Effect>
            <DropShadowEffect ShadowDepth="0" RenderingBias="Quality" BlurRadius="10" />
        </Border.Effect>
        <Grid>
            <Label Name="碰撞过切检查" Style="{StaticResource AppTitle}" />
            <Grid  Margin="0,20,0,0">
                <Label Content="检查列表" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0" />
                <ListBox  
                  
                       ItemsSource="{Binding CheckTPToolpathCollection}"
                       HorizontalAlignment="Left"
                       Height="500"
                       Margin="10,36,0,0"
                       Padding="0,20,0,0"
                       VerticalAlignment="Top" SelectionMode="Single"
                       Width="165" MouseDoubleClick="checkTPResult">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Background="Transparent">

                                <TextBlock Width="15" Text="{Binding Check1Result}" FontWeight="Black" Margin="5,0,0,0" Foreground="{Binding CheckTP1C}" HorizontalAlignment="Left"/>
                                <TextBlock Width="15" Text="{Binding Check2Result}"  FontWeight="Black" Margin="2,0,0,0" Foreground="{Binding CheckTP2C}" HorizontalAlignment="Left"/>
                                <TextBlock Text="{Binding Name}" HorizontalAlignment="Left"  FontWeight="Black" Margin="5,0,0,0"/>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                </ListBox>
                <StackPanel  HorizontalAlignment="Right" Margin="0,50,10,0" Width="135">
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,0" HorizontalAlignment="Center">
                        <RadioButton Tag="0" Click="SelectChecktypeClick" GroupName="CheckOptions" Style="{StaticResource SegmentedLeftRadioButtonStyle}"  Content="碰撞" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                        <RadioButton  Tag="1" Click="SelectChecktypeClick" IsChecked="True" GroupName="CheckOptions" Style="{StaticResource SegmentedRadioButtonStyle}" Content="两者" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        <RadioButton  Tag="2" Click="SelectChecktypeClick" GroupName="CheckOptions" Style="{StaticResource SegmentedRightRadioButtonStyle}"  Content="过切" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                    </StackPanel>
                    <GroupBox Header="对照检查" FontSize="11" Width="120" HorizontalAlignment="Center" Height="39" VerticalAlignment="Top" Margin="0,5,0,0">
                        <StackPanel Orientation="Horizontal">
                            <ComboBox SelectedIndex="{Binding CheckTP_refer_Selectindex}" HorizontalAlignment="Left"  Width="50" >
                                <ComboBoxItem  Content="模型" />
                                <ComboBoxItem Content="残留"/>
                            </ComboBox>
                            <Button Uid="Stockmodel"  Tag="CheckTP_refer_StockmodelName"  Style="{StaticResource EntitySelect}" Visibility="{Binding CheckTP_refer_UseSTockmodel}"  Click="Selectentity_Click" Content="{Binding CheckTP_refer_StockmodelName.Name}" Width="45"      HorizontalAlignment="Center"   Margin="10,0,0 ,0" />

                        </StackPanel>
                    </GroupBox>
                    <GroupBox FontSize="11" Width="120" HorizontalAlignment="Center" Height="63"   Margin="0,5,0,0">
                        <GroupBox.Header>
                            <CheckBox  IsChecked="{Binding CheckTP_SplitTP}"  Content="分割刀具路径" />
                        </GroupBox.Header>
                        <StackPanel Margin="0,5,5,5" HorizontalAlignment="Right">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <TextBlock Text="输出安全移动"/>
                                <CheckBox IsChecked="{Binding CheckTP_SplitTP_usesafe}"  />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="输出不安全路径"/>
                                <CheckBox  IsChecked="{Binding CheckTP_SplitTP_useunsafe}"   />
                            </StackPanel>
                        </StackPanel>

                    </GroupBox>
                    <GroupBox Header="碰撞选项" FontSize="11" Width="120" HorizontalAlignment="Center" Height="76" Margin="0,5,0,0">
                        <Grid>
                            <Label Content="夹持间隙" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5,0,0"/>
                            <Label Content="刀柄间隙" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,29,0,0"/>
                            <TextBox Text="{Binding CheckTP_CkeckToolHolderGAP}"  HorizontalAlignment="Left" Height="23" TextWrapping="NoWrap"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Top" Width="45" Margin="59,5,0,0"/>
                            <TextBox Text="{Binding CheckTP_CkeckToolGAP}"  HorizontalAlignment="Left" Height="23" TextWrapping="NoWrap"  HorizontalContentAlignment="Center" VerticalContentAlignment="Center" VerticalAlignment="Top" Width="45" Margin="59,29,0,0"/>
                        </Grid>
                    </GroupBox>
                    <StackPanel HorizontalAlignment="Left" Margin="8,0,0,0">
                        <CheckBox   IsChecked="{Binding CheckTP_CheckSafeDepth}"  Content="计算碰撞深度"  VerticalAlignment="Top" HorizontalAlignment="Left" Height="18"  VerticalContentAlignment="Center" Margin="0,5,0,0"/>
                        <CheckBox  IsChecked="{Binding CheckTP_ShowUnSafe}"  Content="显示不安全移动"  VerticalAlignment="Top" HorizontalAlignment="Left" Height="18" VerticalContentAlignment="Center" Margin="0,5,0,0"/>
                    </StackPanel>
                    <GroupBox Header="对照检查" FontSize="11" Width="120" HorizontalAlignment="Center" Height="88"  Margin="0,5,0,0">

                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,0" HorizontalAlignment="Center">
                                <RadioButton Tag="0" Click="SelecttransformTypeClick"  Width="35" IsChecked="True"  GroupName="CheckType" Style="{StaticResource SegmentedLeftRadioButtonStyle}"  Content="原" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                                <RadioButton Tag="1" Click="SelecttransformTypeClick" Width="35"   GroupName="CheckType" Style="{StaticResource SegmentedRadioButtonStyle}" Content="对" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                <RadioButton Tag="2" Click="SelecttransformTypeClick" Width="35"  GroupName="CheckType" Style="{StaticResource SegmentedRightRadioButtonStyle}"  Content="5Axis" HorizontalAlignment="Left"  VerticalAlignment="Top"/>
                            </StackPanel>
                            <StackPanel Visibility="{Binding CheckTP_transform_Enable}">
                                <Label Padding="0" Content="镜像基准" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,8,0,0"/>
                                <Button Click="Selectentity_Click"  Style="{StaticResource EntitySelect}" Tag="CheckTP_transform_Workplane"  Uid="Workplane" Content="{Binding CheckTP_transform_Workplane.Name}"  Height="20" HorizontalAlignment="Center"  Width="105" Margin="0,3,0 ,0" />
                            </StackPanel>
                           
                        </StackPanel>

                    </GroupBox>
                    <Button  Style="{StaticResource lightbutton}" Click="Check" Content="检查" HorizontalAlignment="Center" Margin="0,15,0,0" VerticalAlignment="Bottom" Width="100" Height="18"/>

                </StackPanel>
                
            </Grid>
        </Grid>

    </Border>
</UserControl>
